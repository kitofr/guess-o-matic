var _kitofr$guess_o_matic$Main$backspace = function (_p0) {
	var _p1 = _p0;
	var _p2 = _p1.guess;
	var g = _p2._0;
	var q = _p2._1;
	var g$ = A2(_elm_lang$core$String$dropRight, 1, g);
	return {
		guess: {ctor: '_Tuple2', _0: g$, _1: q},
		state: A2(
			_kitofr$guess_o_matic$Types$addGuess,
			{ctor: '_Tuple2', _0: g$, _1: q},
			_p1.state)
	};
};
var _kitofr$guess_o_matic$Main$addChar = F2(
	function (ch, _p3) {
		var _p4 = _p3;
		var _p5 = _p4.guess;
		var g = _p5._0;
		var q = _p5._1;
		var g$ = {
			ctor: '_Tuple2',
			_0: A2(_elm_lang$core$String$append, g, ch),
			_1: q
		};
		return {
			guess: g$,
			state: A2(_kitofr$guess_o_matic$Types$addGuess, g$, _p4.state)
		};
	});
var _kitofr$guess_o_matic$Main$init = function () {
	var state$ = _kitofr$guess_o_matic$Types$initialState;
	var guess$ = A2(_kitofr$guess_o_matic$Types$createGuess, '', state$);
	return {
		ctor: '_Tuple2',
		_0: {guess: guess$, state: state$},
		_1: _elm_lang$core$Platform_Cmd$none
	};
}();
var _kitofr$guess_o_matic$Main$nextWord = F2(
	function (model, state$) {
		var _p6 = state$;
		if (_p6.ctor === 'FinishedGame') {
			return {guess: model.guess, state: state$};
		} else {
			return {guess: _p6._0, state: state$};
		}
	});
var _kitofr$guess_o_matic$Main$update = F2(
	function (msg, model) {
		var _p7 = msg;
		switch (_p7.ctor) {
			case 'AddChar':
				return {
					ctor: '_Tuple2',
					_0: A2(_kitofr$guess_o_matic$Main$addChar, _p7._0, model),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Reset':
				var _p8 = model.guess;
				var q = _p8._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							guess: {ctor: '_Tuple2', _0: '', _1: q}
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Backspace':
				return {
					ctor: '_Tuple2',
					_0: _kitofr$guess_o_matic$Main$backspace(model),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'NewWord':
				var _p9 = _elm_lang$core$Debug$log('correct!');
				var _p10 = _kitofr$guess_o_matic$Ports$correct(true);
				return {
					ctor: '_Tuple2',
					_0: A2(_kitofr$guess_o_matic$Main$nextWord, model, _p7._0),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				var _p13 = _p7._0;
				var _p11 = _elm_lang$core$Debug$log(
					A2(_elm_lang$core$Basics_ops['++'], 'play: ', _p13));
				var _p12 = _kitofr$guess_o_matic$Ports$playChar(_p13);
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _kitofr$guess_o_matic$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{
			init: _kitofr$guess_o_matic$Main$init,
			view: _kitofr$guess_o_matic$View$view,
			update: _kitofr$guess_o_matic$Main$update,
			subscriptions: function (_p14) {
				return _elm_lang$core$Platform_Sub$none;
			}
		})
};
