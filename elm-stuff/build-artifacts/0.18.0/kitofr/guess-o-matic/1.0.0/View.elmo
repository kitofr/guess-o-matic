var _kitofr$guess_o_matic$View$score = function (_p0) {
	var _p1 = _p0;
	var score = _kitofr$guess_o_matic$Types$currentScore(_p1.state);
	var fontX = _elm_lang$core$Basics$toString(85 - (((score / 10) | 0) * 12));
	return A2(
		_elm_lang$svg$Svg$svg,
		{
			ctor: '::',
			_0: _elm_lang$svg$Svg_Attributes$width('200'),
			_1: {
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$height('200'),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 200 200'),
					_1: {ctor: '[]'}
				}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$svg$Svg$polygon,
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$fill('#EE9'),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$points('100,10 40,198 190,78 10,78 160,198'),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$svg$Svg$text_,
					{
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$fontSize('45'),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$x(fontX),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$y('130'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$fill('blue'),
									_1: {ctor: '[]'}
								}
							}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$svg$Svg$text(
							_elm_lang$core$Basics$toString(score)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _kitofr$guess_o_matic$View$quit = A2(
	_elm_lang$html$Html$span,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$style(
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'float', _1: 'left'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'margin-left', _1: '20px'},
					_1: {ctor: '[]'}
				}
			}),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$button,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('btn btn-warning'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline'},
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_kitofr$guess_o_matic$Types$Quit),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('Quit'),
				_1: {ctor: '[]'}
			}),
		_1: {ctor: '[]'}
	});
var _kitofr$guess_o_matic$View$answer = function (_p2) {
	var _p3 = _p2;
	return _kitofr$guess_o_matic$Types$word(_p3._1);
};
var _kitofr$guess_o_matic$View$paddUpTo = F2(
	function (lst, n) {
		paddUpTo:
		while (true) {
			if (_elm_lang$core$Native_Utils.cmp(
				_elm_lang$core$List$length(lst),
				n) < 0) {
				var _v2 = A2(
					_elm_lang$core$List$append,
					lst,
					{
						ctor: '::',
						_0: _elm_lang$core$Native_Utils.chr('_'),
						_1: {ctor: '[]'}
					}),
					_v3 = n;
				lst = _v2;
				n = _v3;
				continue paddUpTo;
			} else {
				return lst;
			}
		}
	});
var _kitofr$guess_o_matic$View$hasMoreWords = function (_p4) {
	var _p5 = _p4;
	var lst = _kitofr$guess_o_matic$Types$wordList(_p5.state);
	var _p6 = lst;
	if (_p6.ctor === '[]') {
		return false;
	} else {
		return true;
	}
};
var _kitofr$guess_o_matic$View$currentAnswer = function (_p7) {
	var _p8 = _p7;
	var _p9 = _p8.guess;
	var question = _p9._1;
	return _kitofr$guess_o_matic$Types$word(question);
};
var _kitofr$guess_o_matic$View$image = function (_p10) {
	var _p11 = _p10;
	return _p11._1.image;
};
var _kitofr$guess_o_matic$View$picture = function (_p12) {
	var _p13 = _p12;
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$img,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$src(
						_kitofr$guess_o_matic$View$image(_p13.guess)),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$width(300),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$height(300),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$style(
									{
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'border', _1: '1px solid #AAA'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '25px'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: '-webkit-box-shadow', _1: '0 10px 6px -6px #777'},
													_1: {
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: '-moz-box-shadow', _1: '0 10px 6px -6px #777'},
														_1: {
															ctor: '::',
															_0: {ctor: '_Tuple2', _0: 'box-shadow', _1: '0 10px 6px -6px #777'},
															_1: {ctor: '[]'}
														}
													}
												}
											}
										}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				},
				{ctor: '[]'}),
			_1: {ctor: '[]'}
		});
};
var _kitofr$guess_o_matic$View$bigAndSmall = function (s) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		s,
		A2(
			_elm_lang$core$Basics_ops['++'],
			' ',
			_elm_lang$core$String$toLower(s)));
};
var _kitofr$guess_o_matic$View$buttonStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'margin-right', _1: '10px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'width', _1: '100px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'font-size', _1: '20px'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px'},
					_1: {ctor: '[]'}
				}
			}
		}
	});
var _kitofr$guess_o_matic$View$btn = F3(
	function (action, classes, what) {
		return A2(
			_elm_lang$html$Html$button,
			{
				ctor: '::',
				_0: classes,
				_1: {
					ctor: '::',
					_0: _kitofr$guess_o_matic$View$buttonStyle,
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(action),
						_1: {ctor: '[]'}
					}
				}
			},
			what);
	});
var _kitofr$guess_o_matic$View$primaryBtn = F2(
	function (label, action) {
		return A3(
			_kitofr$guess_o_matic$View$btn,
			action,
			_elm_lang$html$Html_Attributes$class('btn btn-primary'),
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(label),
				_1: {ctor: '[]'}
			});
	});
var _kitofr$guess_o_matic$View$charButton = F2(
	function (c, action) {
		return A2(
			_kitofr$guess_o_matic$View$primaryBtn,
			c,
			action(c));
	});
var _kitofr$guess_o_matic$View$addButtons = F2(
	function (answer, msg) {
		return A2(
			_elm_lang$core$List$map,
			function (c) {
				return A2(
					_kitofr$guess_o_matic$View$charButton,
					_elm_lang$core$String$fromChar(c),
					msg);
			},
			_kitofr$guess_o_matic$Seq$uniqueChars(answer));
	});
var _kitofr$guess_o_matic$View$iconButton = function (action) {
	return A3(
		_kitofr$guess_o_matic$View$btn,
		action,
		_elm_lang$html$Html_Attributes$class('btn glyphicon glyphicon-volume-up'),
		{ctor: '[]'});
};
var _kitofr$guess_o_matic$View$addIconButtons = F2(
	function (answer, action) {
		return A2(
			_elm_lang$core$List$map,
			function (c) {
				return _kitofr$guess_o_matic$View$iconButton(
					action(
						_elm_lang$core$String$fromChar(c)));
			},
			_kitofr$guess_o_matic$Seq$uniqueChars(answer));
	});
var _kitofr$guess_o_matic$View$controlButton = F2(
	function (action, icon) {
		return A2(
			_elm_lang$html$Html$button,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class(
					A2(_elm_lang$core$Basics_ops['++'], 'btn btn-warning glyphicon ', icon)),
				_1: {
					ctor: '::',
					_0: _kitofr$guess_o_matic$View$buttonStyle,
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(action),
						_1: {ctor: '[]'}
					}
				}
			},
			{ctor: '[]'});
	});
var _kitofr$guess_o_matic$View$disabledButton = function (ch) {
	var t = _elm_lang$core$String$fromChar(ch);
	return A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('btn btn-disabled'),
			_1: {
				ctor: '::',
				_0: _kitofr$guess_o_matic$View$buttonStyle,
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(_kitofr$guess_o_matic$Types$Backspace),
					_1: {ctor: '[]'}
				}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(t),
			_1: {ctor: '[]'}
		});
};
var _kitofr$guess_o_matic$View$megaButton = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'width', _1: '130px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'font-size', _1: '40px'},
			_1: {ctor: '[]'}
		}
	});
var _kitofr$guess_o_matic$View$pushToBottom = {
	ctor: '::',
	_0: _elm_lang$html$Html_Attributes$style(
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '100px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'margin-bottom', _1: '100px'},
				_1: {ctor: '[]'}
			}
		}),
	_1: {ctor: '[]'}
};
var _kitofr$guess_o_matic$View$smallButtonStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'font-size', _1: '16px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'margin-right', _1: '5px'},
			_1: {ctor: '[]'}
		}
	});
var _kitofr$guess_o_matic$View$collectedChars = function (collected) {
	return A2(
		_elm_lang$core$List$map,
		function (c) {
			return A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('btn btn-disabled'),
					_1: {
						ctor: '::',
						_0: _kitofr$guess_o_matic$View$smallButtonStyle,
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(c),
					_1: {ctor: '[]'}
				});
		},
		A2(
			_elm_lang$core$List$map,
			_elm_lang$core$String$fromChar,
			_elm_lang$core$Set$toList(collected)));
};
var _kitofr$guess_o_matic$View$checkAnswer = function (_p14) {
	var _p15 = _p14;
	var _p17 = _p15.state;
	var _p16 = _p17;
	if (_p16.ctor === 'FinishedGame') {
		return {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$section,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '35px'},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				},
				_kitofr$guess_o_matic$View$collectedChars(_p16._0)),
			_1: {ctor: '[]'}
		};
	} else {
		return _kitofr$guess_o_matic$Types$correct(_p15.guess) ? {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('btn btn-success'),
					_1: {
						ctor: '::',
						_0: _kitofr$guess_o_matic$View$megaButton,
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(
								_kitofr$guess_o_matic$Types$NewWord(_p17)),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$span,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('glyphicon glyphicon-thumbs-up'),
							_1: {ctor: '[]'}
						},
						{ctor: '[]'}),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		} : {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{ctor: '[]'}),
			_1: {ctor: '[]'}
		};
	}
};
var _kitofr$guess_o_matic$View$stylesheet = function (href) {
	return A3(
		_elm_lang$html$Html$node,
		'link',
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$rel('stylesheet'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$href(href),
				_1: {ctor: '[]'}
			}
		},
		{ctor: '[]'});
};
var _kitofr$guess_o_matic$View$center = function (width) {
	return {
		ctor: '::',
		_0: {
			ctor: '_Tuple2',
			_0: 'width',
			_1: A2(
				_elm_lang$core$Basics_ops['++'],
				_elm_lang$core$Basics$toString(width),
				'%')
		},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'display', _1: 'block'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'margin', _1: 'auto'},
				_1: {ctor: '[]'}
			}
		}
	};
};
var _kitofr$guess_o_matic$View$checkButton = function () {
	var style = A2(
		_elm_lang$core$List$append,
		_kitofr$guess_o_matic$View$center(90),
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'font-size', _1: '35px'},
			_1: {ctor: '[]'}
		});
	return {
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$style(style),
		_1: {
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('btn btn-success'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(_kitofr$guess_o_matic$Types$CheckWord),
				_1: {ctor: '[]'}
			}
		}
	};
}();
var _kitofr$guess_o_matic$View$centerInline = function (width) {
	return _elm_lang$html$Html_Attributes$style(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'width',
				_1: A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(width),
					'%')
			},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'display', _1: 'inline-block'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'margin', _1: 'auto'},
					_1: {ctor: '[]'}
				}
			}
		});
};
var _kitofr$guess_o_matic$View$progress = function (_p18) {
	var _p19 = _p18;
	var total = 500.0;
	var width = _elm_lang$core$Basics$toString(total);
	var tot = _elm_lang$core$Basics$toFloat(
		_elm_lang$core$List$length(_kitofr$guess_o_matic$Data$alternatives));
	var n = _elm_lang$core$Basics$toFloat(
		_elm_lang$core$List$length(
			_kitofr$guess_o_matic$Types$wordList(_p19.state)));
	var complete = ((tot - n) / tot) * total;
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _kitofr$guess_o_matic$View$centerInline(90),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$svg$Svg$svg,
				{
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$width('100%'),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$height('20'),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$viewBox(
								A2(
									_elm_lang$core$Basics_ops['++'],
									'0 0 ',
									A2(_elm_lang$core$Basics_ops['++'], width, ' 20'))),
							_1: {ctor: '[]'}
						}
					}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$rect,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$fill('#AAA'),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$x('0'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$y('0'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$width(width),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$height('20'),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$rx('5'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$ry('5'),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$svg$Svg$rect,
							{
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$fill('#8C8'),
								_1: {
									ctor: '::',
									_0: _elm_lang$svg$Svg_Attributes$x('0'),
									_1: {
										ctor: '::',
										_0: _elm_lang$svg$Svg_Attributes$y('0'),
										_1: {
											ctor: '::',
											_0: _elm_lang$svg$Svg_Attributes$width(
												_elm_lang$core$Basics$toString(complete)),
											_1: {
												ctor: '::',
												_0: _elm_lang$svg$Svg_Attributes$height('20'),
												_1: {
													ctor: '::',
													_0: _elm_lang$svg$Svg_Attributes$rx('5'),
													_1: {
														ctor: '::',
														_0: _elm_lang$svg$Svg_Attributes$ry('5'),
														_1: {ctor: '[]'}
													}
												}
											}
										}
									}
								}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _kitofr$guess_o_matic$View$container_ = _elm_lang$html$Html$div(
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$class('container text-center'),
		_1: {
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'background-color', _1: '#EEE'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'height', _1: '100%'},
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		}
	});
var _kitofr$guess_o_matic$View$questionArea = _elm_lang$html$Html$div(
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$style(
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'width', _1: '90%'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'display', _1: 'block'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'border-radius', _1: '10px'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'background', _1: 'white'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'margin', _1: 'auto'},
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}),
		_1: {ctor: '[]'}
	});
var _kitofr$guess_o_matic$View$rowDistance = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'margin-bottom', _1: '10px'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '25px'},
			_1: {ctor: '[]'}
		}
	});
var _kitofr$guess_o_matic$View$row = _elm_lang$html$Html$div(
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$class('row'),
		_1: {
			ctor: '::',
			_0: _kitofr$guess_o_matic$View$rowDistance,
			_1: {ctor: '[]'}
		}
	});
var _kitofr$guess_o_matic$View$textControls = function (model) {
	return _kitofr$guess_o_matic$View$row(
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(_kitofr$guess_o_matic$View$controlButton, _kitofr$guess_o_matic$Types$Reset, 'glyphicon-refresh'),
					_1: {
						ctor: '::',
						_0: A2(_kitofr$guess_o_matic$View$controlButton, _kitofr$guess_o_matic$Types$Backspace, 'glyphicon-erase'),
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _kitofr$guess_o_matic$View$showGuess = function (_p20) {
	var _p21 = _p20;
	var _p22 = _p21.guess;
	var answer_ = _elm_lang$core$String$toList(
		_kitofr$guess_o_matic$View$answer(_p22));
	var paddTo = _elm_lang$core$List$length(answer_);
	var paddedGuess = A2(
		_kitofr$guess_o_matic$View$paddUpTo,
		_elm_lang$core$String$toList(
			_elm_lang$core$Tuple$first(_p22)),
		paddTo);
	return _kitofr$guess_o_matic$View$row(
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				A2(_elm_lang$core$List$map, _kitofr$guess_o_matic$View$disabledButton, paddedGuess)),
			_1: {ctor: '[]'}
		});
};
var _kitofr$guess_o_matic$View$letterButtons = function (model) {
	return _kitofr$guess_o_matic$View$row(
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				A2(
					_kitofr$guess_o_matic$View$addButtons,
					_kitofr$guess_o_matic$View$currentAnswer(model),
					_kitofr$guess_o_matic$Types$AddChar)),
			_1: {ctor: '[]'}
		});
};
var _kitofr$guess_o_matic$View$soundButtons = function (model) {
	return _kitofr$guess_o_matic$View$row(
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				A2(
					_kitofr$guess_o_matic$View$addIconButtons,
					_kitofr$guess_o_matic$View$currentAnswer(model),
					_kitofr$guess_o_matic$Types$PlayChar)),
			_1: {ctor: '[]'}
		});
};
var _kitofr$guess_o_matic$View$success = function (model) {
	return _kitofr$guess_o_matic$View$row(
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				_kitofr$guess_o_matic$View$checkAnswer(model)),
			_1: {ctor: '[]'}
		});
};
var _kitofr$guess_o_matic$View$view = function (model) {
	return A2(
		_elm_lang$html$Html$main_,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$header,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _kitofr$guess_o_matic$View$stylesheet('https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$body,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _kitofr$guess_o_matic$View$container_(
							{
								ctor: '::',
								_0: _kitofr$guess_o_matic$View$row(
									{
										ctor: '::',
										_0: _kitofr$guess_o_matic$View$quit,
										_1: {
											ctor: '::',
											_0: _kitofr$guess_o_matic$View$progress(model),
											_1: {ctor: '[]'}
										}
									}),
								_1: {
									ctor: '::',
									_0: _kitofr$guess_o_matic$View$row(
										{
											ctor: '::',
											_0: _kitofr$guess_o_matic$View$questionArea(
												{
													ctor: '::',
													_0: _kitofr$guess_o_matic$View$picture(model),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$div,
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$class('row'),
																_1: {ctor: '[]'}
															},
															{ctor: '[]'}),
														_1: {
															ctor: '::',
															_0: _kitofr$guess_o_matic$View$showGuess(model),
															_1: {
																ctor: '::',
																_0: _kitofr$guess_o_matic$View$letterButtons(model),
																_1: {
																	ctor: '::',
																	_0: _kitofr$guess_o_matic$View$soundButtons(model),
																	_1: {ctor: '[]'}
																}
															}
														}
													}
												}),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											_kitofr$guess_o_matic$View$pushToBottom,
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$button,
													_kitofr$guess_o_matic$View$checkButton,
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Kontrollera'),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
